#!/usr/bin/python
#############################
#
# Envisioned as a grand unified manager for the qnap series of 
# low-end NAS devices.
#
# Use at your own risk.
#
# (c) 2011 Eric Williams <eric@subcritical.org>
#
#
##############################

import evdev
import qcontrol
import select
import glob

from time import sleep


def main():
  """
  this monitors the NAS's vitals, and also
  watches for button events.
  """
  nas = qcontrol.Ts212()
  ev =None
    
  while 1:
    # watch for incoming event device nodes...
    del ev
    EVDEV_DEVICES=glob.glob("/dev/input/event*")
    ev  = evdev.DeviceGroup(EVDEV_DEVICES)
    readers = [nas.fd] + ev.fds
    writers = [nas.fd]
    writers = []
    exceptions = []

    r, w, x = select.select(readers, writers, exceptions)
    
    for reader in r:
      if reader==nas.fd:
        # print "OMG NASFD"
        nas.process_data(reader.read(1))
    
      elif reader in ev.fds:
        # print "OMG EV!"
        e = ev.next_event()
        print dir(e)

      else:
        pass 
     
  
  
  

if __name__=='__main__':
  main()
  
  